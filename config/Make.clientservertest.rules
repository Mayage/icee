# **********************************************************************
#
# Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************

TEST_LOCAL_PATH	                := $(LOCAL_PATH)

#
# Client test
#
ifeq ($(CLIENT_SLICES),)
    CLIENT_SLICES               = Test.ice
endif

ifneq ($(CLIENT_SLICES_EXT),)
    CLIENT_SLICES               := $(CLIENT_SLICES) $(CLIENT_SLICES_EXT)
endif

ifneq ($(TEST_SLICES_EXT),)
    CLIENT_SLICES               := $(CLIENT_SLICES) $(TEST_SLICES_EXT)
endif

ifeq ($(CLIENT_SRCS),)
    CLIENT_SRCS                 = Client.cpp AllTests.cpp
endif

ifneq ($(CLIENT_SRCS_EXT),)
    CLIENT_SRCS                 := $(CLIENT_SRCS) $(CLIENT_SRCS_EXT)
endif

ifneq ($(TEST_SRCS_EXT),)
    CLIENT_SRCS                 := $(CLIENT_SRCS) $(TEST_SRCS_EXT)
endif

include $(CLEAR_RULES)

LOCAL_EXE                       = client
LOCAL_PATH                      = $(TEST_LOCAL_PATH)
LOCAL_SLICES                    = $(filter-out $(CLIENT_SLICES_EXCLUDE),$(sort $(CLIENT_SLICES)))
LOCAL_SRCS                      = $(filter-out $(CLIENT_SRCS_EXCLUDE),$(sort $(CLIENT_SRCS)))

ifneq ($(CLIENT_SLICES2CPPFLAGS),)
    LOCAL_SLICES2CPPFLAGS       += $(CLIENT_SLICES2CPPFLAGS)
endif

ifneq ($(TEST_SLICES2CPPFLAGS),)
    LOCAL_SLICES2CPPFLAGS       += $(TEST_SLICES2CPPFLAGS)
endif

ifneq ($(CLIENT_CPPFLAGS),)
    LOCAL_CPPFLAGS              += $(CLIENT_CPPFLAGS)
endif

ifneq ($(TEST_CPPFLAGS),)
    LOCAL_CPPFLAGS              += $(TEST_CPPFLAGS)
endif

ifneq ($(CLIENT_DEPENDENT_MODULES),)
    LOCAL_DEPENDENT_MODULES     = $(CLIENT_DEPENDENT_MODULES)
endif


ifneq ($(TEST_DEPENDENT_MODULES),)
    LOCAL_DEPENDENT_MODULES     := $(LOCAL_DEPENDENT_MODULES) $(TEST_DEPENDENT_MODULES)
endif

ifneq ($(CLIENT_LINKWITH),)
    LOCAL_LINKWITH              = $(CLIENT_LINKWITH)
endif

ifneq ($(TEST_LINKWITH),)
    LOCAL_LINKWITH              += $(TEST_LINKWITH)
endif

ifneq ($(CLIENT_LDFLAGS),)
    LOCAL_LDFLAGS               += $(CLIENT_LDFLAGS)
endif

ifneq ($(TEST_LDFLAGS),)
    LOCAL_LDFLAGS               += $(TEST_LDFLAGS)
endif

include $(TEST_APPLICATION_RULES)

#
# Server test
#
ifeq ($(SERVER_SLICES),)
    SERVER_SLICES               = Test.ice
endif

ifneq ($(SERVER_SLICES_EXT),)
    SERVER_SLICES               := $(SERVER_SLICES) $(SERVER_SLICES_EXT)
endif

ifneq ($(TEST_SLICES_EXT),)
    SERVER_SLICES               := $(SERVER_SLICES) $(TEST_SLICES_EXT)
endif

ifeq ($(SERVER_SRCS),)
    SERVER_SRCS                 = Server.cpp TestI.cpp
endif

ifneq ($(SERVER_SRCS_EXT),)
    SERVER_SRCS                 := $(SERVER_SRCS) $(SERVER_SRCS_EXT)
endif

ifneq ($(TEST_SRCS_EXT),)
    SERVER_SRCS                 := $(SERVER_SRCS) $(TEST_SRCS_EXT)
endif

include $(CLEAR_RULES)

LOCAL_EXE                       = server
LOCAL_PATH                      = $(TEST_LOCAL_PATH)
LOCAL_SLICES                    = $(filter-out $(SERVER_SLICES_EXCLUDE),$(sort $(SERVER_SLICES)))
LOCAL_SRCS                      = $(filter-out $(SERVER_SRCS_EXCLUDE),$(sort $(SERVER_SRCS)))


ifneq ($(SERVER_SLICES2CPPFLAGS),)
    LOCAL_SLICES2CPPFLAGS       += $(SERVER_SLICES2CPPFLAGS)
endif

ifneq ($(TEST_SLICES2CPPFLAGS),)
    LOCAL_SLICES2CPPFLAGS       += $(TEST_SLICES2CPPFLAGS)
endif

ifneq ($(SERVER_CPPFLAGS),)
    LOCAL_CPPFLAGS              += $(SERVER_CPPFLAGS)
endif

ifneq ($(TEST_CPPFLAGS),)
    LOCAL_CPPFLAGS              += $(TEST_CPPFLAGS)
endif

ifneq ($(SERVER_DEPENDENT_MODULES),)
    LOCAL_DEPENDENT_MODULES     = $(SERVER_DEPENDENT_MODULES)
endif


ifneq ($(TEST_DEPENDENT_MODULES),)
    LOCAL_DEPENDENT_MODULES     := $(LOCAL_DEPENDENT_MODULES) $(TEST_DEPENDENT_MODULES)
endif

ifneq ($(SERVER_LINKWITH),)
    LOCAL_LINKWITH              = $(SERVER_LINKWITH)
endif

ifneq ($(TEST_LINKWITH),)
    LOCAL_LINKWITH              += $(TEST_LINKWITH)
endif

ifneq ($(SERVER_LDFLAGS),)
    LOCAL_LDFLAGS               += $(SERVER_LDFLAGS)
endif

ifneq ($(TEST_LDFLAGS),)
    LOCAL_LDFLAGS               += $(TEST_LDFLAGS)
endif

include $(TEST_APPLICATION_RULES)

#
# Colloc test
#
ifneq ($(findstring colloc,$(TEST_TARGET_EXT)),)

    ifeq ($(COLLOC_SLICES),)
        COLLOC_SLICES           = Test.ice
    endif

    ifneq ($(COLLOC_SLICES_EXT),)
        COLLOC_SLICES           := $(COLLOC_SLICES $(COLLOC_SLICES_EXT)
    endif

    ifneq ($(TEST_SLICES_EXT),)
        COLLOC_SLICES           := $(COLLOC_SLICES) $(TEST_SLICES_EXT)
    endif

    ifneq ($(CLIENT_SLICES_EXT),)
        COLLOC_SLICES           := $(COLLOC_SLICES) $(CLIENT_SLICES_EXT)
    endif

    ifneq ($(SERVER_SLICES_EXT),)
        COLLOC_SLICES           := $(COLLOC_SLICES) $(SERVER_SLICES_EXT)
    endif

    ifeq ($(COLLOC_SRCS),)
    COLLOC_SRCS                 = Collocated.cpp TestI.cpp AllTests.cpp
    endif

    ifneq ($(COLLOC_SRCS_EXT),)
        COLLOC_SRCS             := $(COLLOC_SRCS) $(COLLOC_SRCS_EXT)
    endif

    ifneq ($(SERVER_SRCS_EXT),)
        COLLOC_SRCS             := $(COLLOC_SRCS) $(SERVER_SRCS_EXT)
    endif

    ifneq ($(CLIENT_SRCS_EXT),)
        COLLOC_SRCS             := $(COLLOC_SRCS) $(CLIENT_SRCS_EXT)
    endif

    ifneq ($(TEST_SRCS_EXT),)
        COLLOC_SRCS             := $(COLLOC_SRCS) $(TEST_SRCS_EXT)
    endif

    include $(CLEAR_RULES)

    LOCAL_EXE                   = collocated
    LOCAL_PATH                  = $(TEST_LOCAL_PATH)
    LOCAL_SLICES                = $(filter-out $(COLLOC_SLICES_EXCLUDE),$(sort $(COLLOC_SLICES)))
    LOCAL_SRCS                  = $(filter-out $(COLLOC_SRCS_EXCLUDE),$(sort $(COLLOC_SRCS)))

    ifneq ($(COLLOC_SLICES2CPPFLAGS),)
        LOCAL_SLICES2CPPFLAGS   += $(COLLOC_SLICES2CPPFLAGS)
    endif

    ifneq ($(TEST_SLICES2CPPFLAGS),)
        LOCAL_SLICES2CPPFLAGS   += $(TEST_SLICES2CPPFLAGS)
    endif

    ifneq ($(COLLOC_CPPFLAGS),)
        LOCAL_CPPFLAGS          += $(COLLOC_CPPFLAGS)
    endif

    ifneq ($(TEST_CPPFLAGS),)
        LOCAL_CPPFLAGS          += $(TEST_CPPFLAGS)
    endif

    ifneq ($(COLLOC_DEPENDENT_MODULES),)
        LOCAL_DEPENDENT_MODULES = $(COLLOC_DEPENDENT_MODULES)
    endif

    ifneq ($(TEST_DEPENDENT_MODULES),)
        LOCAL_DEPENDENT_MODULES := $(LOCAL_DEPENDENT_MODULES) $(TEST_DEPENDENT_MODULES)
    endif

    ifneq ($(COLLOC_LINKWITH),)
        LOCAL_LINKWITH              = $(COLLOC_LINKWITH)
    endif

    ifneq ($(TEST_LINKWITH),)
        LOCAL_LINKWITH              += $(TEST_LINKWITH)
    endif

    ifneq ($(COLLOC_LDFLAGS),)
        LOCAL_LDFLAGS               += $(COLLOC_LDFLAGS)
    endif

    ifneq ($(TEST_LDFLAGS),)
        LOCAL_LDFLAGS               += $(TEST_LDFLAGS)
    endif

    include $(TEST_APPLICATION_RULES)

endif

#
# ServerAMD test
#
ifneq ($(findstring serveramd,$(TEST_TARGET_EXT)),)

    ifeq ($(AMD_SLICES),)
        AMD_SLICES              = TestAMD.ice
    endif

    ifneq ($(AMD_SLICES_EXT),)
        AMD_SLICES              := $(AMD_SLICES) $(AMD_SLICES_EXT)
    endif

    ifneq ($(TEST_SLICES_EXT),)
        AMD_SLICES              := $(AMD_SLICES) $(TEST_SLICES_EXT)
    endif

    ifeq ($(AMD_SRCS),)
        AMD_SRCS                = TestAMDI.cpp ServerAMD.cpp
    endif

    ifneq ($(AMD_SRCS_EXT),)
        AMD_SRCS                := $(AMD_SRCS) $(AMD_SRCS_EXT)
    endif

    ifneq ($(TEST_SRCS_EXT),)
        AMD_SRCS                := $(AMD_SRCS) $(TEST_SRCS_EXT)
    endif

    include $(CLEAR_RULES)

    LOCAL_EXE                   = serveramd
    LOCAL_PATH                  = $(TEST_LOCAL_PATH)
    LOCAL_SLICES                = $(filter-out $(AMD_SLICES_EXCLUDE),$(sort $(AMD_SLICES)))
    LOCAL_SRCS                  = $(filter-out $(AMD_SRCS_EXCLUDE),$(sort $(AMD_SRCS)))


    ifneq ($(AMD_SLICES2CPPFLAGS),)
        LOCAL_SLICES2CPPFLAGS   += $(AMD_SLICES2CPPFLAGS)
    endif

    ifneq ($(TEST_SLICES2CPPFLAGS),)
        LOCAL_SLICES2CPPFLAGS   += $(AMD_SLICES2CPPFLAGS)
    endif

    ifneq ($(AMD_CPPFLAGS),)
        LOCAL_CPPFLAGS          += $(AMD_CPPFLAGS)
    endif

    ifneq ($(TEST_CPPFLAGS),)
        LOCAL_CPPFLAGS          += $(TEST_CPPFLAGS)
    endif

    ifneq ($(AMD_DEPENDENT_MODULES),)
        LOCAL_DEPENDENT_MODULES = $(AMD_DEPENDENT_MODULES)
    endif

    ifneq ($(TEST_DEPENDENT_MODULES),)
        LOCAL_DEPENDENT_MODULES := $(LOCAL_DEPENDENT_MODULES) $(TEST_DEPENDENT_MODULES)
    endif

    ifneq ($(AMD_LINKWITH),)
        LOCAL_LINKWITH              = $(AMD_LINKWITH)
    endif

    ifneq ($(TEST_LINKWITH),)
        LOCAL_LINKWITH              += $(TEST_LINKWITH)
    endif

    ifneq ($(AMD_LDFLAGS),)
        LOCAL_LDFLAGS               += $(AMD_LDFLAGS)
    endif

    ifneq ($(TEST_LDFLAGS),)
        LOCAL_LDFLAGS               += $(TEST_LDFLAGS)
    endif

    include $(TEST_APPLICATION_RULES)

endif

#
# Clear local variables
#
CLIENT_SLICES                   =
CLIENT_SLICES_EXT               =
CLIENT_SLICES_EXCLUDE           =
CLIENT_SLICES2CPPFLAGS          =
CLIENT_SRCS                     =
CLIENT_SRCS_EXT                 =
CLIENT_SRCS_EXCLUDE             =
CLIENT_CPPFLAGS                 =
CLIENT_LDFLAGS                  =
CLIENT_DEPENDENT_MODULES        =
CLIENT_LINKWITH                 =

SERVER_SLICES                   =
SERVER_SLICES_EXT               =
SERVER_SLICES_EXCLUDE           =
SERVER_SLICES2CPPFLAGS          =
SERVER_SRCS                     =
SERVER_SRCS_EXT                 =
SERVER_SRCS_EXCLUDE             =
SERVER_CPPFLAGS                 =
SERVER_LDFLAGS                  =
SERVER_DEPENDENT_MODULES        =
SERVER_LINKWITH                 =

COLLOC_SLICES                   =
COLLOC_SLICES_EXT               =
COLLOC_SLICES_EXCLUDE           =
COLLOC_SLICES2CPPFLAGS          =
COLLOC_SRCS                     =
COLLOC_SRCS_EXT                 =
COLLOC_SRCS_EXCLUDE             =
COLLOC_CPPFLAGS                 =
COLLOC_LDFLAGS                  =
COLLOC_DEPENDENT_MODULES        =
COLLOC_LINKWITH                 =

AMD_SLICES                      =
AMD_SLICES_EXT                  =
AMD_SLICES_EXCLUDE              =
AMD_SLICES2CPPFLAGS             =
AMD_SRCS                        =
AMD_SRCS_EXT                    =
AMD_SRCS_EXCLUDE                =
AMD_CPPFLAGS                    =
AMD_LDFLAGS                     =
AMD_DEPENDENT_MODULES           =
AMD_LINKWITH                    =

TEST_TARGET_EXT                 =
TEST_SLICES_EXT                 =
TEST_SLICES2CPPFLAGS            =
TEST_SRCS_EXT                   =
TEST_LOCAL_PATH                 =
TEST_CPPFLAGS                   =
TEST_LDFLAGS                    =
TEST_DEPENDENT_MODULES          =
TEST_LINKWITH                   =
